:: StoryTitle
Joyride (SugarCube edition)

:: StoryData
{
    "ifid": "90634D21-E2C2-45C0-9DB1-849B7F1ACF51",
    "format": "sugarcube",
    "format-version": "2.35.0"
}

:: StoryInit
<<set $messages = []>>

:: StoryCaption
Name: <<print $playerName || "N/A">> <<print $navigatorNumber ? "($navigatorNumber)" : "">>
Ship: <<print $shipName ? "$shipName ($shipType)" : "None">>
Current Location: <<print _currentLocation || "Unknown">>

<<silently>>
    <<set _messageLink to "Messages">>\
    <<set _unreads to window.setup.unreadMessagesCount()>>
    <<if _unreads > 0>>
        <<set _messageLink to "Messages (" + _unreads+ ")">>
    <</if>>
<</silently>>\
<<link _messageLink>>
<<script>>
    function renderMessages() {
        let messagesPassage = Story.lookup("tags", "messages");

        if (!messagesPassage) {
            return;
        }

        messagesPassage = messagesPassage[0]; // Should only be one
        const messagesSource = messagesPassage.text;
        Dialog.wiki(messagesSource);
        Dialog.open();
        $(document).trigger(":messagesopened");
        UIBar.update();
    }
    renderMessages();
<</script>>
<</link>>

:: Messages [messages]
<<if $playerFirstName !== "">>\
!Messages for $playerFirstName
<<else>>\
!Messages
<</if>>\
<<script>>
    const messages = State.variables.messages || [];

    if (!Array.isArray(messages) || messages.length === 0) {
        $(output).wiki("!!No Messages")
    } else {
        messages.forEach(function(message) {
            message.read = true;
            $(output).wiki(`\
                ''Subject: ${message.subject}''
                ''From: ${message.from}''
                ${message.body}
            `)
        });
    }
<</script>>

:: PassageHeader
<<set _actions = []>>

:: PassageFooter
@@#action-bar;
----
<<nobr>>
    <<if _actions>>
        <<script>>
            const actions = State.temporary.actions;

            if (Array.isArray(actions)) {
                actions.forEach((action) => {
                    if (typeof action === "string") {
                        let fullLink = action;
                        if (!action.match(/\[\[.+\]\]/)) {
                            fullLink = `[[${action}]]`;
                        }
                        $(output).wiki(`<<button ${fullLink}>><</button>>`);
                    }

                    $(output).wiki(" ");
                });
            }
        <</script>>
    <</if>>
<</nobr>>
@@

:: Widgets [widget]
<<widget acts>>
    <<for _i=0; _i < $args.length; _i++>>
        <<run _actions.push($args[_i])>>
    <</for>>
<</widget>>

<<widget npc>>\
@@.npc;"<<print $args[0]>>"@@\
<</widget>>

<<widget pc>>\
@@.pc;"<<print $args.join(" ")>>"@@\
<</widget>>

<<widget aug>>\
@@.aug;<<print $args[0]>>@@\
<</widget>>